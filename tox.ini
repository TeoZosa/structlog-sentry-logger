[gh-actions]
python =
    3.7: clean, py37
    3.8: clean, py38
    3.9: clean, py39, report

[tox]
skip_missing_interpreters = true
isolated_build = true
envlist =
    clean,
    py3{7,8,9},
    report,
    package

[testenv]
description = Run test suite under {basepython}
changedir = tests
deps = -r requirements-dev.txt
commands =
    pytest --cov={toxinidir}/structlog_sentry_logger --cov={toxinidir}/docs_src --cov-append --cov-report=term-missing \
    --basetemp="{envtmpdir}" -n 8 {posargs}
depends =
    py3{7,8,9}: clean
    report: py3{7,8,9}

[testenv:precommit]
description = Run `pre-commit` hooks to auto-format and lint the codebase
; For shfmt
setenv = GOCACHE={envdir}/go-build
skip_install = true
deps = {[testenv]deps}
passenv =
    HOMEPATH  # needed on Windows
    SKIP # hook ids to skip
commands = pre-commit run {posargs} -vv --all-files --color always

[testenv:package]
description = Build Python package and validate its long description
deps =
    poetry >= 1.1.2
    twine >= 1.12.1
    readme-renderer[md] >= 24.0
skip_install = true
commands = poetry build
           twine check {toxinidir}/dist/*

[testenv:security]
skip_install = true
deps = safety
commands = safety check --full-report -r {toxinidir}/requirements-dev.txt

[testenv:report]
description = [Run locally after tests]: Create coverage reports
changedir = {[testenv]changedir}
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html
    coverage json --pretty-print
    coverage xml

[testenv:clean]
changedir = {[testenv]changedir}
deps = coverage
skip_install = true
commands = coverage erase

;Tooling configs
[mypy]
ignore_missing_imports = True

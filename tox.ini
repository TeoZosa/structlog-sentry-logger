[gh-actions]
python =
    3.7: clean, py37
    3.8: clean, py38
    3.9: clean, py39, coverage

[tox]
skip_missing_interpreters = true
isolated_build = true
envlist =
    clean,
    py3{7,8,9},
    coverage,
    package

[testenv]
description = Run test suite under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
deps = -r requirements-dev.txt
changedir = tests
passenv =
    http_proxy
    https_proxy
    no_proxy
commands = pytest \
           --cov={toxinidir}/structlog_sentry_logger \
           --cov={toxinidir}/docs_src \
           --cov-config={toxinidir}/pyproject.toml \
           --junitxml={toxworkdir}/junit.xml \
           --cov-append \
           --cov-report=term-missing \
           --basetemp={envtmpdir} \
           -n 8 \
           {posargs}
depends =
    py3{7,8,9}: clean
    coverage: py3{7,8,9}

[testenv:coverage]
description = [Run locally after tests]: Combine coverage data and create reports;
              generates a diff coverage against `{env:DIFF_AGAINST:origin/master}`
              (can be changed by setting `DIFF_AGAINST` env var)
deps =
    coverage[toml]
    diff_cover
changedir = {[testenv]changedir}
skip_install = true
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
commands =
    coverage report --show-missing --fail-under=100.0
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    coverage json --pretty-print
    diff-cover {toxworkdir}/coverage.xml \
        --compare-branch={env:DIFF_AGAINST:origin/master} \
        --diff-range-notation '..'

[testenv:clean]
changedir = {[testenv]changedir}
deps = coverage
skip_install = true
commands = coverage erase

[testenv:precommit]
description = Run `pre-commit` hooks to auto-format and lint the codebase
deps = {[testenv]deps}
skip_install = true
; For shfmt
setenv = GOCACHE={envdir}/go-build
passenv =
    HOMEPATH  # needed on Windows
    SKIP # hook ids to skip
commands = pre-commit run {posargs} -vv --all-files --color always
           python -c 'print("hint: run `make install-pre-commit-hooks` to add checks as pre-commit hook")'

[testenv:package]
description = Build Python package and validate its long description
deps =
    poetry >= 1.1.2
    twine >= 1.12.1
    readme-renderer[md] >= 24.0
skip_install = true
commands = poetry build
           twine check {toxinidir}/dist/*

[testenv:security]
skip_install = true
deps = safety
commands = safety check --full-report -r {toxinidir}/requirements-dev.txt

;Tooling configs
[mypy]
ignore_missing_imports = True
